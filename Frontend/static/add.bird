/* --------------------------------------------------- CHALLENGE ------------------------------------- 
Write a function that takes in two ints and returns the sum of those two ints.
----------------------------------------------------------------------------------------------------------- */

fn add(x: int, y: int) -> int {
    return 0; 
}

/* --------------------------------------------- TESTS ------------------------------------------- */
struct Answer {
    name: str;
    input: int[];
    output: int;
};

fn test() {
    const cases: Answer[] = [
        Answer {name = "1 + 2", input = [1,2], output = 3},
        Answer {name = "3 + 4", input = [3, 4], output = 7},
        Answer {name = "34 + 35", input = [34, 35], output = 69},
        Answer {name = "100 + 1000", input = [100, 1000], output = 1100},
        Answer {name = "-123 + 123", input = [-123, 123], output = 0},
        Answer {name = "-124 + -12", input = [-124, -12], output = -136},
        Answer {name = "51 + 31", input = [51, 31], output = 82},
        Answer {name = "0 + 0", input = [0, 0], output = 0},
        Answer {name = "15 + -15", input = [15, -15], output = 0},
        Answer {name = "100000000 + 1", input = [100000000, 1], output = 100000001},
        Answer {name = "4 + 2", input = [4, 2], output = 6}
    ];

    for case in iter(cases) {
        print case.name + ": " + (add(case.input[0], case.input[1]) == case.output ? "passed" : "FAILED");
    }

    print "done!";
}

test();